import Head from 'next/head'
import { useRef, useState } from 'react'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { storageService } from '@/services/storage.service'
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { data } from 'autoprefixer'
export default function Home() {
  const router = useRouter();
  const formData = {
    password: useRef(),
    email: useRef()
  }
  const [showPassword, setShowPassword] = useState(false)
  const [errors, setErrors] = useState();
  let userString = storageService.get('user')

  if (userString) {
    let user = JSON.parse(userString)
    if (storageService.checkRole(user.role_id) == 'Administrator') {
      router.push('/administrator')
    } else if (storageService.checkRole(user.role_id) === 'Guru') {
      router.push('/teacher');
    } else if (storageService.checkRole(user.role_id) === 'Kepala Sekolah') {
      router.push('/headmaster');
    } else if (storageService.checkRole(user.role_id) === 'Tenaga Kesehatan') {
      router.push('/ministry');
    } else if (storageService.checkRole(user.role_id) === 'Dinas Pendidikan') {
      router.push('/education-authorities');
    } else if (storageService.checkRole(user.role_id) === 'Bunda Paud') {
      router.push('/leader');
    }
  }

  function detectMob() {
    const toMatch = [
      /Android/i,
      /webOS/i,
      /iPhone/i,
      /iPad/i,
      /iPod/i,
      /BlackBerry/i,
      /Windows Phone/i
    ];

    return toMatch.some((toMatchItem) => {
      return navigator.userAgent.match(toMatchItem);
    });
  }
  if(router.isReady) {
    fetch('https://api-mentari.death-code.site/api/get-ip', {
      method: 'GET'
    }).then((res)=>res.json()).then((data)=> {
      // let isp = data.isp.toLowerCase();
      if(!(storageService.get('secret')?.toString() == 'true')) {
        
          if(!data.success && detectMob()) {
            router.push('/warn')
          }
      }
    })
  }

  const handleSubmit = (event) => {
    event.preventDefault();
    fetch(process.env.API + '/sanctum/csrf-cookie', {
      method: 'get'
    }).then((res) => res).then((data) => {
      fetch(process.env.API + '/api/auth/login', {
        method: 'post',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          email: formData.email.current.value,
          password: formData.password.current.value
        })
      }).then((res) => res.json()).then((data) => {
        if (data.success) {
          storageService.add('user', JSON.stringify(data.data))
          let role = storageService.checkRole(data.data?.role_id)
          if (role == 'Administrator') {
            router.push('/administrator');
          } else if (role === 'Guru') {
            router.push('/teacher');
          } else if (role === 'Kepala Sekolah') {
            router.push('/headmaster');
          } else if (role === 'Tenaga Kesehatan') {
            router.push('/ministry');
          } else if (role === 'Dinas Pendidikan') {
            router.push('/education-authorities');
          } else if (role === 'Bunda Paud') {
            router.push('/leader');
          }
        } else {
          setErrors(data.data);
          console.log(data.data);
          toast.error('Gagal login', {
            position : 'top-center'
          })
        }
      })
    })

  }
  return (
    <>
      <Head>
        <title>{process.env.APP_NAME}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon-16x16.png" />
      </Head>
      <main>
        <ToastContainer/>
        <div className="min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12">
          <div className="relative py-3 max-w-2xl mx-auto w-full">
            <div
              className="absolute inset-0 bg-gradient-to-r from-blue-300 to-blue-600 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl">
            </div>
            <div className="relative px-4 bg-white shadow-lg sm:rounded-3xl p-20 md:p-1 lg:p-10">
              <div className="max-w-md mx-auto">
                <div className='flex justify-center flex-col items-center'>
                  <Image src={'/favicon/apple-icon-180x180.png'} height={100} width={100} alt='logo'></Image>
                  <h1 className="text-2xl font-semibold">Login {process.env.APP_NAME}</h1>
                </div>
                <form onSubmit={handleSubmit}>
                  <div className="divide-y divide-gray-200">
                    <div className="py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7">
                      <div className="relative">
                        <input id="email" name="email" type="email" ref={formData.email} className="peer placeholder-transparent h-10 w-full border-b-2 border-gray-300 text-gray-900 focus:outline-none focus:borer-rose-600" placeholder="Email address" />
                        <label for="email" className="absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm">Email</label>
                        
                      </div>
                      <div className="relative">
                        <input id="password" ref={formData.password} name="password" type={showPassword ? 'text' : 'password'} className="peer placeholder-transparent h-10 w-full border-b-2 border-gray-300 text-gray-900 focus:outline-none focus:borer-rose-600" placeholder="Password" />
                        <label for="password" className="absolute left-0 -top-3.5 text-gray-600 text-sm peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-440 peer-placeholder-shown:top-2 transition-all peer-focus:-top-3.5 peer-focus:text-gray-600 peer-focus:text-sm">Password</label>
                        <span className='absolute right-0 top-2 cursor-pointer' onClick={() => setShowPassword(!showPassword)}>
                          <svg xmlns="http://www.w3.org/2000/svg" className={showPassword ? 'hidden' : 'w-5 h-5'} viewBox="0 0 512 512"><path fill="none" stroke="#000000" strokeLinecap="round" strokeLinejoin="round" strokeWidth="32" d="M255.66 112c-77.94 0-157.89 45.11-220.83 135.33a16 16 0 0 0-.27 17.77C82.92 340.8 161.8 400 255.66 400c92.84 0 173.34-59.38 221.79-135.25a16.14 16.14 0 0 0 0-17.47C428.89 172.28 347.8 112 255.66 112Z"></path><circle cx="256" cy="256" r="80" fill="none" stroke="currentColor" strokeMiterlimit="10" strokeWidth="32"></circle></svg>
                        </span>
                        <span className='absolute right-0 top-2 cursor-pointer' onClick={() => setShowPassword(!showPassword)}>
                        <svg xmlns="http://www.w3.org/2000/svg" className={!showPassword ? 'hidden' : 'w-5 h-5'} viewBox="0 0 24 24"><path fill="none" stroke="#000000" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M7 6.362A9.707 9.707 0 0 1 12 5c6.307 0 9.367 5.683 9.91 6.808c.06.123.06.261 0 .385c-.352.728-1.756 3.362-4.41 5.131M14 18.8a9.93 9.93 0 0 1-2 .2c-6.307 0-9.367-5.683-9.91-6.808a.44.44 0 0 1 0-.386c.219-.452.84-1.632 1.91-2.885m6 .843A3 3 0 0 1 14.236 14M3 3l18 18"></path></svg>
                        </span>
                      </div>
                      <div className={errors ? 'flex justify-center items-center text-center' : 'hidden'}>
                        <span className="text-xs bg-blue-500 p-2 rounded-lg text-white w-full">Password atau email salah</span>
                      </div>
                      <div className="relative">
                        <button className="bg-blue-500 text-white rounded-md px-2 py-1">Submit</button>
                      </div>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  )
}
